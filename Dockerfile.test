FROM php:8.3-cli

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libzip-dev \
    zip \
    unzip \
    sqlite3 \
    libsqlite3-dev \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libicu-dev \
    libxpm-dev \
    libwebp-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    libmagickwand-dev \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) \
    bcmath \
    exif \
    gd \
    intl \
    mbstring \
    opcache \
    pdo \
    pdo_mysql \
    pdo_pgsql \
    pdo_sqlite \
    pcntl \
    zip \
    && docker-php-source delete

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www

# Copy composer files first for better layer caching
COPY composer.json composer.lock* ./

# Set platform requirements
RUN composer config platform.php 8.2 && \
    composer config platform.ext-gd '*' && \
    composer config platform.ext-zip '*' && \
    composer config platform.ext-mbstring '*' && \
    composer config platform.ext-xml '*' && \
    composer config platform.ext-dom '*' && \
    composer config platform.ext-filter '*' && \
    composer config platform.ext-json '*' && \
    composer config platform.ext-openssl '*' && \
    composer config platform.ext-pcre '*' && \
    composer config platform.ext-pdo '*' && \
    composer config platform.ext-phar '*' && \
    composer config platform.ext-tokenizer '*'

# Install dependencies without scripts to avoid post-install issues
RUN composer install --no-interaction --prefer-dist --no-scripts --no-progress --optimize-autoloader --ignore-platform-reqs

# Copy the rest of the application
COPY . .


# Set permissions
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

# Run tests
ENTRYPOINT ["vendor/bin/phpunit"]
